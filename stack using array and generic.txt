
#include <algorithm>
#include <bits/stdc++.h>
#include <iomanip>
#include <iostream>
#include  <math.h>
#include <queue>
#include <vector>
#include <map>
#include <unordered_map>
#include<unordered_set>
#include <set>
#define clr(v,d) memset(v,d,sizeof(v))
#define ll long long
#define vll vector<ll>
using namespace std;
#define ld  long double
const int Max_Size=100;
template<class t> 
class Stack {
    int top;
    t items[Max_Size];
public:
    Stack() {
        top=-1;
    }
    //another way to initialization
    //stack():top(-1){}
    bool IsFull() {
        return top==Max_Size-1;
    }
    bool IsEmpty() {
        return top==-1;
    }
    void push(t x) {
        if(IsFull()) {
            printf("stack overflow\n");
        }else {
            top++;
            items[top]=x;
        }
    }
    int GetTop(t &Element) {
      if(IsEmpty()) {
          printf("stack underflow\n");
      }
       else {
           Element=items[top];
           return items[top];
       }
    }
    void pop() {
        if(IsEmpty()) {
            printf("stack underflow\n");
        }
        else {
            top--;
        }
    }
    void pop(t&Element) {
        if(IsEmpty()) {
            printf("stack underflow\n");
        }
        else {
            Element=items[top];
            top--;
        }
    }
    void print() {
        if(IsEmpty()) {
            printf("stack underflow\n");
        }else {
            cout<<"{";
            for(int i=top;i>=0;i--) {
                cout<<items[i]<<" ";

            }
            cout<<"}";
            cout<<endl;
        }
    }
};
int main() {

  Stack<int> s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.print();
    s.pop();
    s.print();
    s.pop();
    s.pop();
    s.print();

    return 0;
}